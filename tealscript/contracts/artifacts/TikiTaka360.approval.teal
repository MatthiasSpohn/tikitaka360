#pragma version 10

// This TEAL was generated by TEALScript v0.90.3
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	err

// createScoreBox(sender: Address): void
createScoreBox:
	proto 1 0

	// contracts/TikiTaka360.algo.ts:29
	// this.scoreBox(sender).value = {
	//       scoutingPoints: 0,
	//       challengePoints: 0,
	//     }
	byte 0x7362 // "sb"
	frame_dig -1 // sender: Address
	concat
	byte 0x00000000000000000000000000000000
	box_put
	retsub

// bootstrap()uint64
*abi_route_bootstrap:
	// The ABI return prefix
	byte 0x151f7c75

	// execute bootstrap()uint64
	callsub bootstrap
	itob
	concat
	log
	int 1
	return

// bootstrap(): AssetID
bootstrap:
	proto 0 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x

	// contracts/TikiTaka360.algo.ts:36
	// verifyTxn(this.txn, { sender: this.app.creator })
	// verify sender
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts/TikiTaka360.algo.ts:37
	// assert(!this.tokenID.exists)
	txna Applications 0
	byte 0x746f6b656e4944 // "tokenID"
	app_global_get_ex
	swap
	pop
	!
	assert

	// contracts/TikiTaka360.algo.ts:38
	// registeredAsa = sendAssetCreation({
	//       configAssetName: 'TikiTaka360-Token',
	//       configAssetUnitName: 'TT360',
	//       configAssetTotal: 10_000_000_000,
	//       configAssetDecimals: 2,
	//       configAssetManager: this.app.address,
	//       configAssetFreeze: this.app.address,
	//       configAssetClawback: this.app.address,
	//       configAssetReserve: this.app.address,
	//     })
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// contracts/TikiTaka360.algo.ts:39
	// configAssetName: 'TikiTaka360-Token'
	byte 0x54696b6954616b613336302d546f6b656e // "TikiTaka360-Token"
	itxn_field ConfigAssetName

	// contracts/TikiTaka360.algo.ts:40
	// configAssetUnitName: 'TT360'
	byte 0x5454333630 // "TT360"
	itxn_field ConfigAssetUnitName

	// contracts/TikiTaka360.algo.ts:41
	// configAssetTotal: 10_000_000_000
	int 10_000_000_000
	itxn_field ConfigAssetTotal

	// contracts/TikiTaka360.algo.ts:42
	// configAssetDecimals: 2
	int 2
	itxn_field ConfigAssetDecimals

	// contracts/TikiTaka360.algo.ts:43
	// configAssetManager: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetManager

	// contracts/TikiTaka360.algo.ts:44
	// configAssetFreeze: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetFreeze

	// contracts/TikiTaka360.algo.ts:45
	// configAssetClawback: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetClawback

	// contracts/TikiTaka360.algo.ts:46
	// configAssetReserve: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetReserve

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	frame_bury 0 // registeredAsa: uint64

	// contracts/TikiTaka360.algo.ts:48
	// this.tokenID.value = registeredAsa
	byte 0x746f6b656e4944 // "tokenID"
	frame_dig 0 // registeredAsa: uint64
	app_global_put

	// contracts/TikiTaka360.algo.ts:49
	// return registeredAsa;
	frame_dig 0 // registeredAsa: uint64

	// set the subroutine return value
	frame_bury 0
	retsub

// mintAndGetApp(string,string,string,address,address,uint64)uint64
*abi_route_mintAndGetApp:
	// The ABI return prefix
	byte 0x151f7c75

	// total: uint64
	txna ApplicationArgs 6
	btoi

	// reserve: address
	txna ApplicationArgs 5
	dup
	len
	int 32
	==
	assert

	// manager: address
	txna ApplicationArgs 4
	dup
	len
	int 32
	==
	assert

	// url: string
	txna ApplicationArgs 3
	extract 2 0

	// unitName: string
	txna ApplicationArgs 2
	extract 2 0

	// name: string
	txna ApplicationArgs 1
	extract 2 0

	// execute mintAndGetApp(string,string,string,address,address,uint64)uint64
	callsub mintAndGetApp
	itob
	concat
	log
	int 1
	return

// mintAndGetApp(name: string, unitName: string, url: string, manager: Address, reserve: Address, total: uint64): uint64
mintAndGetApp:
	proto 6 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x

	// contracts/TikiTaka360.algo.ts:60
	// sendMethodCall<typeof PlayerCard.prototype.createApplication>({
	//       clearStateProgram: PlayerCard.clearProgram(),
	//       approvalProgram: PlayerCard.approvalProgram(),
	//       globalNumUint: 5,
	//       localNumUint: 1,
	//     })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "createApplication()void"
	itxn_field ApplicationArgs

	// contracts/TikiTaka360.algo.ts:61
	// clearStateProgram: PlayerCard.clearProgram()
	byte b64 Cg==
	itxn_field ClearStateProgram

	// contracts/TikiTaka360.algo.ts:62
	// approvalProgram: PlayerCard.approvalProgram()
	byte b64 CiAEAAEEICYJAXIBYwF0AXABbgFsBBUffHUABAGjo/8xGBSBBgsxGQiNDAH2AjAAAAAAAAAAAAHoAAAAAAAAAAAAAACKAwCxJLIQi/+yFIv+shGL/bISIrIBs4mKAQAii/8yCoj/3YmIAAIjQ4oAACgiZykiZysiZycEImcqImeJNhoBF4gAAiNDigEAKov/Z4v/iP/GiYgAAiNDigAAMQAnBSJmiScGNhoGFzYaBUkVJRJENhoESRUlEkQ2GgNXAgA2GgJXAgA2GgFXAgCIAAUWULAjQ4oGAScHsYEDshCL/7Imi/6yJYv9sieL/LIpi/uyKiKyI4v6siIisiQisgGztDyMACcEiwBniwCMAIknBjYaAReIAAUWULAjQ4oBAScHRwIxADYyAGFEMQAqZHAATEhEKGSMAClkjAExACcFYowCiwIiEkEAEIEKgegHKWQJCypkMQCI/umLAiINQQAgiwEjCYwBiwEiEkEABigiZ0IADSiLAIsBC4sCCYsBCmcpiwEjCGcxACcFi/9mKIsAiwELi/8IKWQKZyuBkKEPKWQLZyhkjABGAokxFiMJSTgQJBJEiAACI0OKAQCL/zgUMQASRIv/OBIiDkSJMRYjCUk4ECQSRIgAAiNDigEAi/84FDEAEkSL/zgSIg5EiTEWIwlJOBAjEkSIAAIjQ4oBAIv/OAc2MgByB0gSRIv/OAgrZA9EsSSyECcEZLIRI7ISMQCyFCKyAbOJgAS4RHs2NhoAjgH+MACABFgdXlcnCIAE+FGOc4AEZskaU4AEAUh1nYAEYAhYk4AE2n/BCjYaAI4H/g/+Jf40/p7/Ov9c/34AJwg2GgCOAf4bAA==
	itxn_field ApprovalProgram

	// contracts/TikiTaka360.algo.ts:63
	// globalNumUint: 5
	int 5
	itxn_field GlobalNumUint

	// contracts/TikiTaka360.algo.ts:64
	// localNumUint: 1
	int 1
	itxn_field LocalNumUint

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/TikiTaka360.algo.ts:67
	// factoryApp: AppID = this.itxn.createdApplicationID
	itxn CreatedApplicationID
	frame_bury 0 // factoryApp: AppID

	// contracts/TikiTaka360.algo.ts:69
	// sendPayment({
	//       amount: 500_000,
	//       receiver: factoryApp.address,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/TikiTaka360.algo.ts:70
	// amount: 500_000
	int 500_000
	itxn_field Amount

	// contracts/TikiTaka360.algo.ts:71
	// receiver: factoryApp.address
	frame_dig 0 // factoryApp: AppID
	app_params_get AppAddress
	pop
	itxn_field Receiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/TikiTaka360.algo.ts:74
	// sendMethodCall<typeof PlayerCard.prototype.createNFT>({
	//       applicationID: factoryApp,
	//       methodArgs: [name, unitName, url, manager, reserve, total],
	//     })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "createNFT(string,string,string,address,address,uint64)uint64"
	itxn_field ApplicationArgs

	// contracts/TikiTaka360.algo.ts:75
	// applicationID: factoryApp
	frame_dig 0 // factoryApp: AppID
	itxn_field ApplicationID

	// contracts/TikiTaka360.algo.ts:76
	// methodArgs: [name, unitName, url, manager, reserve, total]
	frame_dig -1 // name: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	itxn_field ApplicationArgs
	frame_dig -2 // unitName: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	itxn_field ApplicationArgs
	frame_dig -3 // url: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	itxn_field ApplicationArgs
	frame_dig -4 // manager: Address
	itxn_field ApplicationArgs
	frame_dig -5 // reserve: Address
	itxn_field ApplicationArgs
	frame_dig -6 // total: uint64
	itob
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn NumLogs
	int 1
	-
	itxnas Logs
	extract 4 0
	btoi

	// contracts/TikiTaka360.algo.ts:79
	// return factoryApp.id;
	frame_dig 0 // factoryApp: AppID

	// set the subroutine return value
	frame_bury 0
	retsub

// fundFactoryApp(address,uint64,uint64)void
*abi_route_fundFactoryApp:
	// amount: uint64
	txna ApplicationArgs 3
	btoi

	// appid: uint64
	txna ApplicationArgs 2
	btoi

	// address: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==
	assert

	// execute fundFactoryApp(address,uint64,uint64)void
	callsub fundFactoryApp
	int 1
	return

// fundFactoryApp(address: Address, appid: uint64, amount: uint64): void
fundFactoryApp:
	proto 3 0

	// contracts/TikiTaka360.algo.ts:83
	// sendMethodCall<typeof PlayerCard.prototype.optInToToken>({
	//       applicationID: AppID.fromUint64(appid),
	//       methodArgs: [this.tokenID.value],
	//     })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "optInToToken(uint64)void"
	itxn_field ApplicationArgs

	// contracts/TikiTaka360.algo.ts:84
	// applicationID: AppID.fromUint64(appid)
	frame_dig -2 // appid: uint64
	itxn_field ApplicationID

	// contracts/TikiTaka360.algo.ts:85
	// methodArgs: [this.tokenID.value]
	byte 0x746f6b656e4944 // "tokenID"
	app_global_get
	itob
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/TikiTaka360.algo.ts:89
	// sendAssetTransfer({
	//       xferAsset: this.tokenID.value,
	//       assetAmount: amount,
	//       assetReceiver: address,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/TikiTaka360.algo.ts:90
	// xferAsset: this.tokenID.value
	byte 0x746f6b656e4944 // "tokenID"
	app_global_get
	itxn_field XferAsset

	// contracts/TikiTaka360.algo.ts:91
	// assetAmount: amount
	frame_dig -3 // amount: uint64
	itxn_field AssetAmount

	// contracts/TikiTaka360.algo.ts:92
	// assetReceiver: address
	frame_dig -1 // address: Address
	itxn_field AssetReceiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// updateScoreBox(address,uint64,uint64)void
*abi_route_updateScoreBox:
	// cp: uint64
	txna ApplicationArgs 3
	btoi

	// sp: uint64
	txna ApplicationArgs 2
	btoi

	// address: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==
	assert

	// execute updateScoreBox(address,uint64,uint64)void
	callsub updateScoreBox
	int 1
	return

// updateScoreBox(address: Address, sp: uint64, cp: uint64): void
updateScoreBox:
	proto 3 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dup

	// contracts/TikiTaka360.algo.ts:99
	// assert(this.scoreBox(address).exists)
	byte 0x7362 // "sb"
	frame_dig -1 // address: Address
	concat
	box_len
	swap
	pop
	assert

	// contracts/TikiTaka360.algo.ts:101
	// currentScoutingPoints = this.scoreBox(address).value.scoutingPoints
	int 0
	int 8
	byte 0x7362 // "sb"
	frame_dig -1 // address: Address
	concat
	cover 2
	box_extract
	btoi
	frame_bury 0 // currentScoutingPoints: uint64

	// contracts/TikiTaka360.algo.ts:102
	// currentChallengePoints = this.scoreBox(address).value.challengePoints
	int 8 // headOffset
	int 8
	byte 0x7362 // "sb"
	frame_dig -1 // address: Address
	concat
	cover 2
	box_extract
	btoi
	frame_bury 1 // currentChallengePoints: uint64

	// contracts/TikiTaka360.algo.ts:104
	// this.scoreBox(address).value = {
	//       scoutingPoints: currentScoutingPoints + sp,
	//       challengePoints: currentChallengePoints + cp,
	//     }
	byte 0x7362 // "sb"
	frame_dig -1 // address: Address
	concat
	frame_dig 0 // currentScoutingPoints: uint64
	frame_dig -2 // sp: uint64
	+
	itob
	frame_dig 1 // currentChallengePoints: uint64
	frame_dig -3 // cp: uint64
	+
	itob
	concat
	box_put
	retsub

// createChallenge(pay,uint64,uint64,uint64)void
*abi_route_createChallenge:
	// playerId: uint64
	txna ApplicationArgs 3
	btoi

	// given: uint64
	txna ApplicationArgs 2
	btoi

	// length: uint64
	txna ApplicationArgs 1
	btoi

	// payment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute createChallenge(pay,uint64,uint64,uint64)void
	callsub createChallenge
	int 1
	return

// createChallenge(payment: PayTxn, length: uint64, given: uint64, playerId: uint64): void
createChallenge:
	proto 4 0

	// contracts/TikiTaka360.algo.ts:112
	// assert(!this.challengeBox(playerId).exists)
	byte 0x6362 // "cb"
	frame_dig -4 // playerId: uint64
	itob
	concat
	box_len
	swap
	pop
	!
	assert

	// contracts/TikiTaka360.algo.ts:115
	// assert(this.challengeIndex.value < 5)
	byte 0x6368616c6c656e6765496e646578 // "challengeIndex"
	app_global_get
	int 5
	<
	assert

	// contracts/TikiTaka360.algo.ts:118
	// verifyPayTxn(payment, {
	//       sender: this.txn.sender,
	//       receiver: this.app.address,
	//       amount: challengeBoxMbr + extraFee,
	//     })
	// verify sender
	frame_dig -1 // payment: PayTxn
	gtxns Sender
	txn Sender
	==
	assert

	// verify receiver
	frame_dig -1 // payment: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// verify amount
	frame_dig -1 // payment: PayTxn
	gtxns Amount
	int 100000
	==
	assert

	// contracts/TikiTaka360.algo.ts:129
	// this.challengeBox(playerId).value = {
	//       creator: this.txn.sender,
	//       given: given,
	//       end: 86_400 * length + globals.latestTimestamp,
	//     }
	byte 0x6362 // "cb"
	frame_dig -4 // playerId: uint64
	itob
	concat
	frame_dig -3 // given: uint64
	itob
	int 86_400
	frame_dig -2 // length: uint64
	*
	global LatestTimestamp
	+
	itob
	concat
	txn Sender
	concat
	box_put

	// contracts/TikiTaka360.algo.ts:136
	// this.challengeIndex.value = 1 + this.challengeIndex.value
	byte 0x6368616c6c656e6765496e646578 // "challengeIndex"
	int 1
	byte 0x6368616c6c656e6765496e646578 // "challengeIndex"
	app_global_get
	+
	app_global_put
	retsub

// participate(pay,uint64,uint64)void
*abi_route_participate:
	// prediction: uint64
	txna ApplicationArgs 2
	btoi

	// playerId: uint64
	txna ApplicationArgs 1
	btoi

	// payment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute participate(pay,uint64,uint64)void
	callsub participate
	int 1
	return

// participate(payment: PayTxn, playerId: uint64, prediction: uint64): void
participate:
	proto 3 0

	// contracts/TikiTaka360.algo.ts:141
	// assert(this.challengeBox(playerId).exists)
	byte 0x6362 // "cb"
	frame_dig -2 // playerId: uint64
	itob
	concat
	box_len
	swap
	pop
	assert

	// *if0_condition
	// contracts/TikiTaka360.algo.ts:144
	// !this.scoreBox(this.txn.sender).exists
	byte 0x7362 // "sb"
	txn Sender
	concat
	box_len
	swap
	pop
	!
	bz *if0_end

	// *if0_consequent
	// contracts/TikiTaka360.algo.ts:145
	// this.createScoreBox(this.txn.sender)
	txn Sender
	callsub createScoreBox

*if0_end:
	// contracts/TikiTaka360.algo.ts:149
	// verifyPayTxn(payment, {
	//       sender: this.txn.sender,
	//       receiver: this.app.address,
	//       amount: 2 * scoreBoxMbr,
	//     })
	// verify sender
	frame_dig -1 // payment: PayTxn
	gtxns Sender
	txn Sender
	==
	assert

	// verify receiver
	frame_dig -1 // payment: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// verify amount
	frame_dig -1 // payment: PayTxn
	gtxns Amount
	int 43400
	==
	assert

	// *if1_condition
	// contracts/TikiTaka360.algo.ts:156
	// this.challengeBox(playerId).value.given === prediction
	int 0
	int 8
	byte 0x6362 // "cb"
	frame_dig -2 // playerId: uint64
	itob
	concat
	cover 2
	box_extract
	btoi
	frame_dig -3 // prediction: uint64
	==
	bz *if1_end

	// *if1_consequent
	// contracts/TikiTaka360.algo.ts:157
	// this.updateScoreBox(this.txn.sender, 0, 100)
	int 100
	int 0
	txn Sender
	callsub updateScoreBox

*if1_end:
	retsub

// collectScorePoints(pay)void
*abi_route_collectScorePoints:
	// payment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute collectScorePoints(pay)void
	callsub collectScorePoints
	int 1
	return

// collectScorePoints(payment: PayTxn): void
collectScorePoints:
	proto 1 0

	// *if2_condition
	// contracts/TikiTaka360.algo.ts:163
	// !this.scoreBox(this.txn.sender).exists
	byte 0x7362 // "sb"
	txn Sender
	concat
	box_len
	swap
	pop
	!
	bz *if2_end

	// *if2_consequent
	// contracts/TikiTaka360.algo.ts:164
	// this.createScoreBox(this.txn.sender)
	txn Sender
	callsub createScoreBox

*if2_end:
	// contracts/TikiTaka360.algo.ts:167
	// verifyPayTxn(payment, {
	//       sender: this.txn.sender,
	//       receiver: this.app.address,
	//       amount: 2 * scoreBoxMbr,
	//     })
	// verify sender
	frame_dig -1 // payment: PayTxn
	gtxns Sender
	txn Sender
	==
	assert

	// verify receiver
	frame_dig -1 // payment: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// verify amount
	frame_dig -1 // payment: PayTxn
	gtxns Amount
	int 43400
	==
	assert

	// contracts/TikiTaka360.algo.ts:173
	// this.updateScoreBox(this.txn.sender, 100, 0)
	int 0
	int 100
	txn Sender
	callsub updateScoreBox
	retsub

// readScoreBox(address)(uint64,uint64)
*abi_route_readScoreBox:
	// The ABI return prefix
	byte 0x151f7c75

	// address: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==
	assert

	// execute readScoreBox(address)(uint64,uint64)
	callsub readScoreBox
	concat
	log
	int 1
	return

// readScoreBox(address: Address): { sp: uint64; cp: uint64 }
readScoreBox:
	proto 1 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dup

	// contracts/TikiTaka360.algo.ts:177
	// assert(this.scoreBox(address).exists)
	byte 0x7362 // "sb"
	frame_dig -1 // address: Address
	concat
	box_len
	swap
	pop
	assert

	// contracts/TikiTaka360.algo.ts:178
	// sp = this.scoreBox(address).value.scoutingPoints
	int 0
	int 8
	byte 0x7362 // "sb"
	frame_dig -1 // address: Address
	concat
	cover 2
	box_extract
	btoi
	frame_bury 0 // sp: uint64

	// contracts/TikiTaka360.algo.ts:179
	// cp = this.scoreBox(address).value.challengePoints
	int 8 // headOffset
	int 8
	byte 0x7362 // "sb"
	frame_dig -1 // address: Address
	concat
	cover 2
	box_extract
	btoi
	frame_bury 1 // cp: uint64

	// contracts/TikiTaka360.algo.ts:180
	// return { sp: sp, cp: cp };
	frame_dig 0 // sp: uint64
	itob
	frame_dig 1 // cp: uint64
	itob
	concat

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 1
	retsub

// removeChallengeBox(uint64)void
*abi_route_removeChallengeBox:
	// playerId: uint64
	txna ApplicationArgs 1
	btoi

	// execute removeChallengeBox(uint64)void
	callsub removeChallengeBox
	int 1
	return

// removeChallengeBox(playerId: uint64): void
removeChallengeBox:
	proto 1 0

	// contracts/TikiTaka360.algo.ts:184
	// sendPayment({
	//       receiver: this.challengeBox(playerId).value.creator,
	//       amount: challengeBoxMbr,
	//       fee: 1_000,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/TikiTaka360.algo.ts:185
	// receiver: this.challengeBox(playerId).value.creator
	int 16 // headOffset
	int 32
	byte 0x6362 // "cb"
	frame_dig -1 // playerId: uint64
	itob
	concat
	cover 2
	box_extract
	itxn_field Receiver

	// contracts/TikiTaka360.algo.ts:186
	// amount: challengeBoxMbr
	int 24900
	itxn_field Amount

	// contracts/TikiTaka360.algo.ts:187
	// fee: 1_000
	int 1_000
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/TikiTaka360.algo.ts:190
	// this.challengeBox(playerId).delete()
	byte 0x6362 // "cb"
	frame_dig -1 // playerId: uint64
	itob
	concat
	box_del

	// contracts/TikiTaka360.algo.ts:191
	// this.challengeIndex.value = this.challengeIndex.value - 1
	byte 0x6368616c6c656e6765496e646578 // "challengeIndex"
	dup
	app_global_get
	int 1
	-
	app_global_put
	retsub

// removeScoreBox(address)void
*abi_route_removeScoreBox:
	// address: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==
	assert

	// execute removeScoreBox(address)void
	callsub removeScoreBox
	int 1
	return

// removeScoreBox(address: Address): void
removeScoreBox:
	proto 1 0

	// contracts/TikiTaka360.algo.ts:195
	// sendPayment({
	//       receiver: address,
	//       amount: scoreBoxMbr,
	//       fee: 1_000,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/TikiTaka360.algo.ts:196
	// receiver: address
	frame_dig -1 // address: Address
	itxn_field Receiver

	// contracts/TikiTaka360.algo.ts:197
	// amount: scoreBoxMbr
	int 21700
	itxn_field Amount

	// contracts/TikiTaka360.algo.ts:198
	// fee: 1_000
	int 1_000
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/TikiTaka360.algo.ts:201
	// this.scoreBox(address).delete()
	byte 0x7362 // "sb"
	frame_dig -1 // address: Address
	concat
	box_del
	retsub

*abi_route_createApplication:
	int 1
	return

*create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication
	err

*call_NoOp:
	method "bootstrap()uint64"
	method "mintAndGetApp(string,string,string,address,address,uint64)uint64"
	method "fundFactoryApp(address,uint64,uint64)void"
	method "updateScoreBox(address,uint64,uint64)void"
	method "createChallenge(pay,uint64,uint64,uint64)void"
	method "participate(pay,uint64,uint64)void"
	method "collectScorePoints(pay)void"
	method "readScoreBox(address)(uint64,uint64)"
	method "removeChallengeBox(uint64)void"
	method "removeScoreBox(address)void"
	txna ApplicationArgs 0
	match *abi_route_bootstrap *abi_route_mintAndGetApp *abi_route_fundFactoryApp *abi_route_updateScoreBox *abi_route_createChallenge *abi_route_participate *abi_route_collectScorePoints *abi_route_readScoreBox *abi_route_removeChallengeBox *abi_route_removeScoreBox
	err