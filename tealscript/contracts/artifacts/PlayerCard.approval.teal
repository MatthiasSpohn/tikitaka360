#pragma version 10

// This TEAL was generated by TEALScript v0.90.3
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *call_OptIn *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	err

// doAxfer(receiver: Address, asset: AssetID, amount: uint64): void
doAxfer:
	proto 3 0

	// contracts/PlayerCard.algo.ts:17
	// sendAssetTransfer({
	//       assetReceiver: receiver,
	//       xferAsset: asset,
	//       assetAmount: amount,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/PlayerCard.algo.ts:18
	// assetReceiver: receiver
	frame_dig -1 // receiver: Address
	itxn_field AssetReceiver

	// contracts/PlayerCard.algo.ts:19
	// xferAsset: asset
	frame_dig -2 // asset: AssetID
	itxn_field XferAsset

	// contracts/PlayerCard.algo.ts:20
	// assetAmount: amount
	frame_dig -3 // amount: uint64
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// doOptIn(asset: AssetID): void
doOptIn:
	proto 1 0

	// contracts/PlayerCard.algo.ts:25
	// this.doAxfer(this.app.address, asset, 0)
	int 0
	frame_dig -1 // asset: AssetID
	global CurrentApplicationAddress
	callsub doAxfer
	retsub

// createApplication()void
*abi_route_createApplication:
	// execute createApplication()void
	callsub createApplication
	int 1
	return

// createApplication(): void
createApplication:
	proto 0 0

	// contracts/PlayerCard.algo.ts:30
	// this.globalReview.value = 0
	byte 0x72 // "r"
	int 0
	app_global_put

	// contracts/PlayerCard.algo.ts:31
	// this.reviewCount.value = 0
	byte 0x63 // "c"
	int 0
	app_global_put

	// contracts/PlayerCard.algo.ts:32
	// this.assetPrice.value = 0
	byte 0x70 // "p"
	int 0
	app_global_put

	// contracts/PlayerCard.algo.ts:33
	// this.assetId.value = AssetID.zeroIndex
	byte 0x6e // "n"
	int 0
	app_global_put

	// contracts/PlayerCard.algo.ts:34
	// this.tokenId.value = AssetID.zeroIndex
	byte 0x74 // "t"
	int 0
	app_global_put
	retsub

// optInToToken(uint64)void
*abi_route_optInToToken:
	// asset: uint64
	txna ApplicationArgs 1
	btoi

	// execute optInToToken(uint64)void
	callsub optInToToken
	int 1
	return

// optInToToken(asset: AssetID): void
optInToToken:
	proto 1 0

	// contracts/PlayerCard.algo.ts:39
	// this.tokenId.value = asset
	byte 0x74 // "t"
	frame_dig -1 // asset: AssetID
	app_global_put

	// contracts/PlayerCard.algo.ts:40
	// this.doOptIn(asset)
	frame_dig -1 // asset: AssetID
	callsub doOptIn
	retsub

// optInToApplication()void
*abi_route_optInToApplication:
	// execute optInToApplication()void
	callsub optInToApplication
	int 1
	return

// optInToApplication(): void
optInToApplication:
	proto 0 0

	// contracts/PlayerCard.algo.ts:46
	// this.localReview(this.txn.sender).value = 0
	txn Sender
	byte 0x6c // "l"
	int 0
	app_local_put
	retsub

// createNFT(string,string,string,address,address,uint64)uint64
*abi_route_createNFT:
	// The ABI return prefix
	byte 0x151f7c75

	// total: uint64
	txna ApplicationArgs 6
	btoi

	// reserve: address
	txna ApplicationArgs 5
	dup
	len
	int 32
	==
	assert

	// manager: address
	txna ApplicationArgs 4
	dup
	len
	int 32
	==
	assert

	// url: string
	txna ApplicationArgs 3
	extract 2 0

	// unitName: string
	txna ApplicationArgs 2
	extract 2 0

	// name: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createNFT(string,string,string,address,address,uint64)uint64
	callsub createNFT
	itob
	concat
	log
	int 1
	return

// createNFT(name: string, unitName: string, url: string, manager: Address, reserve: Address, total: uint64): AssetID
createNFT:
	proto 6 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x

	// contracts/PlayerCard.algo.ts:51
	// createdAsset = sendAssetCreation({
	//       configAssetName: name,
	//       configAssetUnitName: unitName,
	//       configAssetURL: url,
	//       configAssetManager: manager,
	//       configAssetReserve: reserve,
	//       configAssetDecimals: 0,
	//       configAssetTotal: total,
	//       configAssetDefaultFrozen: 0,
	//     })
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// contracts/PlayerCard.algo.ts:52
	// configAssetName: name
	frame_dig -1 // name: string
	itxn_field ConfigAssetName

	// contracts/PlayerCard.algo.ts:53
	// configAssetUnitName: unitName
	frame_dig -2 // unitName: string
	itxn_field ConfigAssetUnitName

	// contracts/PlayerCard.algo.ts:54
	// configAssetURL: url
	frame_dig -3 // url: string
	itxn_field ConfigAssetURL

	// contracts/PlayerCard.algo.ts:55
	// configAssetManager: manager
	frame_dig -4 // manager: Address
	itxn_field ConfigAssetManager

	// contracts/PlayerCard.algo.ts:56
	// configAssetReserve: reserve
	frame_dig -5 // reserve: Address
	itxn_field ConfigAssetReserve

	// contracts/PlayerCard.algo.ts:57
	// configAssetDecimals: 0
	int 0
	itxn_field ConfigAssetDecimals

	// contracts/PlayerCard.algo.ts:58
	// configAssetTotal: total
	frame_dig -6 // total: uint64
	itxn_field ConfigAssetTotal

	// contracts/PlayerCard.algo.ts:59
	// configAssetDefaultFrozen: 0
	int 0
	itxn_field ConfigAssetDefaultFrozen

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	frame_bury 0 // createdAsset: uint64

	// contracts/PlayerCard.algo.ts:61
	// this.assetId.value = createdAsset
	byte 0x6e // "n"
	frame_dig 0 // createdAsset: uint64
	app_global_put

	// contracts/PlayerCard.algo.ts:62
	// return createdAsset;
	frame_dig 0 // createdAsset: uint64

	// set the subroutine return value
	frame_bury 0
	retsub

// setNewReview(uint64)uint64
*abi_route_setNewReview:
	// The ABI return prefix
	byte 0x151f7c75

	// newUserReview: uint64
	txna ApplicationArgs 1
	btoi

	// execute setNewReview(uint64)uint64
	callsub setNewReview
	itob
	concat
	log
	int 1
	return

// setNewReview(newUserReview: uint64): uint64
setNewReview:
	proto 1 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x
	dupn 2

	// contracts/PlayerCard.algo.ts:67
	// assert(this.txn.sender.isOptedInToApp(this.app.id))
	txn Sender
	txna Applications 0
	app_opted_in
	assert

	// contracts/PlayerCard.algo.ts:68
	// assert(this.txn.sender.isOptedInToAsset(this.tokenId.value))
	txn Sender
	byte 0x74 // "t"
	app_global_get
	asset_holding_get AssetBalance
	swap
	pop
	assert

	// contracts/PlayerCard.algo.ts:70
	// globalReview = this.globalReview.value
	byte 0x72 // "r"
	app_global_get
	frame_bury 0 // globalReview: uint64

	// contracts/PlayerCard.algo.ts:71
	// reviewCount = this.reviewCount.value
	byte 0x63 // "c"
	app_global_get
	frame_bury 1 // reviewCount: uint64

	// contracts/PlayerCard.algo.ts:72
	// localReview = this.localReview(this.txn.sender).value
	txn Sender
	byte 0x6c // "l"
	app_local_get
	frame_bury 2 // localReview: uint64

	// *if0_condition
	// contracts/PlayerCard.algo.ts:74
	// localReview === 0
	frame_dig 2 // localReview: uint64
	int 0
	==
	bz *if0_end

	// *if0_consequent
	// contracts/PlayerCard.algo.ts:75
	// this.doAxfer(this.txn.sender, this.tokenId.value, 10 * (1_000 - this.reviewCount.value))
	int 10
	int 1_000
	byte 0x63 // "c"
	app_global_get
	-
	*
	byte 0x74 // "t"
	app_global_get
	txn Sender
	callsub doAxfer

*if0_end:
	// *if1_condition
	// contracts/PlayerCard.algo.ts:78
	// localReview > 0
	frame_dig 2 // localReview: uint64
	int 0
	>
	bz *if1_end

	// *if1_consequent
	// contracts/PlayerCard.algo.ts:81
	// reviewCount = reviewCount - 1
	frame_dig 1 // reviewCount: uint64
	int 1
	-
	frame_bury 1 // reviewCount: uint64

	// *if2_condition
	// contracts/PlayerCard.algo.ts:82
	// reviewCount === 0
	frame_dig 1 // reviewCount: uint64
	int 0
	==
	bz *if2_else

	// *if2_consequent
	// contracts/PlayerCard.algo.ts:83
	// this.globalReview.value = 0
	byte 0x72 // "r"
	int 0
	app_global_put
	b *if2_end

*if2_else:
	// contracts/PlayerCard.algo.ts:85
	// this.globalReview.value = (globalReview * reviewCount - localReview) / reviewCount
	byte 0x72 // "r"
	frame_dig 0 // globalReview: uint64
	frame_dig 1 // reviewCount: uint64
	*
	frame_dig 2 // localReview: uint64
	-
	frame_dig 1 // reviewCount: uint64
	/
	app_global_put

*if2_end:

*if1_end:
	// contracts/PlayerCard.algo.ts:90
	// this.reviewCount.value = reviewCount + 1
	byte 0x63 // "c"
	frame_dig 1 // reviewCount: uint64
	int 1
	+
	app_global_put

	// contracts/PlayerCard.algo.ts:92
	// this.localReview(this.txn.sender).value = newUserReview
	txn Sender
	byte 0x6c // "l"
	frame_dig -1 // newUserReview: uint64
	app_local_put

	// contracts/PlayerCard.algo.ts:94
	// this.globalReview.value = (globalReview * reviewCount + newUserReview) / this.reviewCount.value
	byte 0x72 // "r"
	frame_dig 0 // globalReview: uint64
	frame_dig 1 // reviewCount: uint64
	*
	frame_dig -1 // newUserReview: uint64
	+
	byte 0x63 // "c"
	app_global_get
	/
	app_global_put

	// contracts/PlayerCard.algo.ts:97
	// this.assetPrice.value = 250_000 * this.reviewCount.value
	byte 0x70 // "p"
	int 250_000
	byte 0x63 // "c"
	app_global_get
	*
	app_global_put

	// contracts/PlayerCard.algo.ts:99
	// return this.globalReview.value;
	byte 0x72 // "r"
	app_global_get

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 2
	retsub

// assetOptIn(axfer)void
*abi_route_assetOptIn:
	// txn: axfer
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int axfer
	==
	assert

	// execute assetOptIn(axfer)void
	callsub assetOptIn
	int 1
	return

// assetOptIn(txn: AssetTransferTxn): void
assetOptIn:
	proto 1 0

	// contracts/PlayerCard.algo.ts:104
	// verifyAssetTransferTxn(txn, {
	//       assetReceiver: this.txn.sender,
	//       assetAmount: { lessThanEqualTo: 0 },
	//     })
	// verify assetReceiver
	frame_dig -1 // txn: AssetTransferTxn
	gtxns AssetReceiver
	txn Sender
	==
	assert

	// verify assetAmount
	frame_dig -1 // txn: AssetTransferTxn
	gtxns AssetAmount
	int 0
	<=
	assert
	retsub

// tokenOptIn(axfer)void
*abi_route_tokenOptIn:
	// txn: axfer
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int axfer
	==
	assert

	// execute tokenOptIn(axfer)void
	callsub tokenOptIn
	int 1
	return

// tokenOptIn(txn: AssetTransferTxn): void
tokenOptIn:
	proto 1 0

	// contracts/PlayerCard.algo.ts:112
	// verifyAssetTransferTxn(txn, {
	//       assetReceiver: this.txn.sender,
	//       assetAmount: { lessThanEqualTo: 0 },
	//     })
	// verify assetReceiver
	frame_dig -1 // txn: AssetTransferTxn
	gtxns AssetReceiver
	txn Sender
	==
	assert

	// verify assetAmount
	frame_dig -1 // txn: AssetTransferTxn
	gtxns AssetAmount
	int 0
	<=
	assert
	retsub

// purchaseNft(pay)void
*abi_route_purchaseNft:
	// payment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute purchaseNft(pay)void
	callsub purchaseNft
	int 1
	return

// purchaseNft(payment: PayTxn): void
purchaseNft:
	proto 1 0

	// contracts/PlayerCard.algo.ts:120
	// verifyTxn(payment, {
	//       receiver: this.app.creator,
	//       amount: { greaterThanEqualTo: this.assetPrice.value },
	//     })
	// verify receiver
	frame_dig -1 // payment: PayTxn
	gtxns Receiver
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// verify amount
	frame_dig -1 // payment: PayTxn
	gtxns Amount
	byte 0x70 // "p"
	app_global_get
	>=
	assert

	// contracts/PlayerCard.algo.ts:125
	// sendAssetTransfer({
	//       xferAsset: this.assetId.value,
	//       assetAmount: 1,
	//       assetReceiver: this.txn.sender,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/PlayerCard.algo.ts:126
	// xferAsset: this.assetId.value
	byte 0x6e // "n"
	app_global_get
	itxn_field XferAsset

	// contracts/PlayerCard.algo.ts:127
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// contracts/PlayerCard.algo.ts:128
	// assetReceiver: this.txn.sender
	txn Sender
	itxn_field AssetReceiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

*create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication
	err

*call_NoOp:
	method "optInToToken(uint64)void"
	method "optInToApplication()void"
	method "createNFT(string,string,string,address,address,uint64)uint64"
	method "setNewReview(uint64)uint64"
	method "assetOptIn(axfer)void"
	method "tokenOptIn(axfer)void"
	method "purchaseNft(pay)void"
	txna ApplicationArgs 0
	match *abi_route_optInToToken *abi_route_optInToApplication *abi_route_createNFT *abi_route_setNewReview *abi_route_assetOptIn *abi_route_tokenOptIn *abi_route_purchaseNft
	err

*call_OptIn:
	method "optInToApplication()void"
	txna ApplicationArgs 0
	match *abi_route_optInToApplication
	err