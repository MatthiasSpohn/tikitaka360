{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "optInToToken(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "optInToApplication()void": {
      "call_config": {
        "opt_in": "CALL",
        "no_op": "CALL"
      }
    },
    "createNFT(string,string,string,address,address,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setNewReview(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "assetOptIn(axfer)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "tokenOptIn(axfer)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "purchaseNft(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {
        "localReview": {
          "type": "uint64",
          "key": "l"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "globalReview": {
          "type": "uint64",
          "key": "r"
        },
        "reviewCount": {
          "type": "uint64",
          "key": "c"
        },
        "assetId": {
          "type": "uint64",
          "key": "n"
        },
        "assetPrice": {
          "type": "uint64",
          "key": "p"
        },
        "tokenId": {
          "type": "uint64",
          "key": "t"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 5
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 1
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "PlayerCard",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optInToToken",
        "args": [
          {
            "name": "asset",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optInToApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createNFT",
        "args": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "unitName",
            "type": "string"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "name": "manager",
            "type": "address"
          },
          {
            "name": "reserve",
            "type": "address"
          },
          {
            "name": "total",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "setNewReview",
        "args": [
          {
            "name": "newUserReview",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "assetOptIn",
        "args": [
          {
            "name": "txn",
            "type": "axfer"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "tokenOptIn",
        "args": [
          {
            "name": "txn",
            "type": "axfer"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "purchaseNft",
        "args": [
          {
            "name": "payment",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}